name: Selenium C# Test Workflow

# Trigger the workflow on pushes or pull requests to the main branch
on:
  push:
    branches:
      - master  # Or your default branch
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest  # Using Windows environment as Selenium requires a browser (Chrome, Edge, etc.)

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v2

    # Step 2: Set up .NET SDK
    - name: Set up .NET Core SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'  # Specify the .NET SDK version you are using

    # Step 3: Install Dependencies (restore the project)
    - name: Restore dependencies
      run: dotnet restore  # This will restore NuGet packages for your solution

    # Step 4: Build the project
    - name: Build the project
      run: dotnet build --configuration Release

    # Step 5: Run Selenium Tests
    - name: Run Selenium Tests
      run: dotnet test --configuration Release

    # Optional: Save test results (this is useful for reporting)
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: '**/test-*.xml'  # If your tests produce XML results, adjust this based on your test framework